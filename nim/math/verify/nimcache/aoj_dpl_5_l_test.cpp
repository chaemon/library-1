/* Generated by Nim Compiler v0.13.0 */
/*   (c) 2015 Andreas Rumpf */
/* The generated code is subject to the original license. */
/* Compiled for: Linux, amd64, gcc */
/* Command for C compiler:
   g++ -c  -w -w -fpermissive -O3 -fno-strict-aliasing  -I/home/chaemon/.choosenim/toolchains/nim-0.13.0/lib -o /home/chaemon/git/library-1/nim/math/verify/nimcache/aoj_dpl_5_l_test.o /home/chaemon/git/library-1/nim/math/verify/nimcache/aoj_dpl_5_l_test.cpp */
#define NIM_INTBITS 64

#include "nimbase.h"
#include <stdio.h>
#include <string.h>
struct TGenericSeq;
struct NimStringDesc;
struct Mint159105;
struct TY159353;
struct TY159354;
struct TNimType;
struct TNimNode;
struct Cell47306;
struct Cellseq47322;
struct Gcheap49618;
struct Gcstack49616;
struct Cellset47318;
struct Pagedesc47314;
struct Memregion29488;
struct Smallchunk29440;
struct Llchunk29482;
struct Bigchunk29442;
struct Intset29414;
struct Trunk29410;
struct Avlnode29486;
struct Gcstat49614;
struct Basechunk29438;
struct Freecell29430;
struct  TGenericSeq  {
NI len;
NI reserved;
};
struct  NimStringDesc  : public TGenericSeq {
NIM_CHAR data[SEQ_DECL_SIZE];
};
struct  Mint159105  {
NI v;
};
typedef N_NIMCALL_PTR(void, TY3489) (void* p, NI op);
typedef N_NIMCALL_PTR(void*, TY3494) (void* p);
struct  TNimType  {
NI size;
NU8 kind;
NU8 flags;
TNimType* base;
TNimNode* node;
void* finalizer;
TY3489 marker;
TY3494 deepcopy;
};
struct  TNimNode  {
NU8 kind;
NI offset;
TNimType* typ;
NCSTRING name;
NI len;
TNimNode** sons;
};
struct  Cell47306  {
NI refcount;
TNimType* typ;
};
struct  Cellseq47322  {
NI len;
NI cap;
Cell47306** d;
};
struct  Cellset47318  {
NI counter;
NI max;
Pagedesc47314* head;
Pagedesc47314** data;
};
typedef Smallchunk29440* TY29503[512];
typedef Trunk29410* Trunkbuckets29412[256];
struct  Intset29414  {
Trunkbuckets29412 data;
};
struct  Memregion29488  {
NI minlargeobj;
NI maxlargeobj;
TY29503 freesmallchunks;
Llchunk29482* llmem;
NI currmem;
NI maxmem;
NI freemem;
NI lastsize;
Bigchunk29442* freechunkslist;
Intset29414 chunkstarts;
Avlnode29486* root;
Avlnode29486* deleted;
Avlnode29486* last;
Avlnode29486* freeavlnodes;
};
struct  Gcstat49614  {
NI stackscans;
NI cyclecollections;
NI maxthreshold;
NI maxstacksize;
NI maxstackcells;
NI cycletablesize;
NI64 maxpause;
};
struct  Gcheap49618  {
Gcstack49616* stack;
void* stackbottom;
NI cyclethreshold;
Cellseq47322 zct;
Cellseq47322 decstack;
Cellset47318 cycleroots;
Cellseq47322 tempstack;
NI recgclock;
Memregion29488 region;
Gcstat49614 stat;
};
struct  Gcstack49616  {
Gcstack49616* prev;
Gcstack49616* next;
void* starts;
void* pos;
NI maxstacksize;
};
typedef NI TY29419[8];
struct  Pagedesc47314  {
Pagedesc47314* next;
NI key;
TY29419 bits;
};
struct  Basechunk29438  {
NI prevsize;
NI size;
NIM_BOOL used;
};
struct  Smallchunk29440  : public Basechunk29438 {
Smallchunk29440* next;
Smallchunk29440* prev;
Freecell29430* freelist;
NI free;
NI acc;
NF data;
};
struct  Llchunk29482  {
NI size;
NI acc;
Llchunk29482* next;
};
struct  Bigchunk29442  : public Basechunk29438 {
Bigchunk29442* next;
Bigchunk29442* prev;
NI align;
NF data;
};
struct  Trunk29410  {
Trunk29410* next;
NI key;
TY29419 bits;
};
typedef Avlnode29486* TY29493[2];
struct  Avlnode29486  {
TY29493 link;
NI key;
NI upperbound;
NI level;
};
struct  Freecell29430  {
Freecell29430* next;
NI zerofield;
};
struct TY159354 : TGenericSeq {
  Mint159105 data[SEQ_DECL_SIZE];
};
struct TY159353 : TGenericSeq {
  TY159354* data[SEQ_DECL_SIZE];
};
N_NIMCALL(void, main_159339)(void);
N_NIMCALL(NI, nextint_159016)(NI base);
N_NIMCALL(NimStringDesc*, HEX24_159192)(Mint159105 a);
N_NIMCALL(NimStringDesc*, nimIntToStr)(NI x);
N_NIMCALL(TY159353*, getpartition_159346)(NI n, NI k);
N_NIMCALL(TY159353*, newseq_159379)(NI len);
N_NIMCALL(void, TMP36)(void* p, NI op);
N_NIMCALL(void, nimGCvisit)(void* d, NI op);
N_NIMCALL(void, TMP37)(void* p, NI op);
N_NIMCALL(TY159354*, newseq_159361)(NI len);
static N_INLINE(void, asgnRefNoCycle)(void** dest, void* src);
static N_INLINE(Cell47306*, usrtocell_51241)(void* usr);
static N_INLINE(void, rtladdzct_52801)(Cell47306* c);
N_NOINLINE(void, addzct_51217)(Cellseq47322& s, Cell47306* c);
N_NIMCALL(void, genericSeqAssign)(void* dest, void* src_83804, TNimType* mt);
N_NIMCALL(Mint159105, convert_159422)(Mint159105 self, NI a);
N_NIMCALL(Mint159105, newmint_159205)(NI a_159209);
N_NIMCALL(Mint159105, HEX2B_159458)(Mint159105 a, Mint159105 b);
N_NIMCALL(void, HEX2BHEX3D_159468)(Mint159105& a, Mint159105 b);
N_NIMCALL(Mint159105, newmint_159125)(Mint159105 a);
static N_INLINE(void, initStackBottomWith)(void* locals);
N_NOINLINE(void, setStackBottom)(void* thestackbottom);
NIM_EXTERNC N_NOINLINE(void, systemInit000)(void);
NIM_EXTERNC N_NOINLINE(void, systemDatInit000)(void);
NIM_EXTERNC N_NOINLINE(void, stdlib_algorithmInit000)(void);
NIM_EXTERNC N_NOINLINE(void, stdlib_algorithmDatInit000)(void);
NIM_EXTERNC N_NOINLINE(void, stdlib_sequtilsInit000)(void);
NIM_EXTERNC N_NOINLINE(void, stdlib_sequtilsDatInit000)(void);
NIM_EXTERNC N_NOINLINE(void, stdlib_parseutilsInit000)(void);
NIM_EXTERNC N_NOINLINE(void, stdlib_parseutilsDatInit000)(void);
NIM_EXTERNC N_NOINLINE(void, stdlib_strutilsInit000)(void);
NIM_EXTERNC N_NOINLINE(void, stdlib_strutilsDatInit000)(void);
NIM_EXTERNC N_NOINLINE(void, stdlib_etcprivInit000)(void);
NIM_EXTERNC N_NOINLINE(void, stdlib_etcprivDatInit000)(void);
NIM_EXTERNC N_NOINLINE(void, stdlib_hashesInit000)(void);
NIM_EXTERNC N_NOINLINE(void, stdlib_hashesDatInit000)(void);
NIM_EXTERNC N_NOINLINE(void, stdlib_timesInit000)(void);
NIM_EXTERNC N_NOINLINE(void, stdlib_timesDatInit000)(void);
NIM_EXTERNC N_NOINLINE(void, stdlib_mathInit000)(void);
NIM_EXTERNC N_NOINLINE(void, stdlib_mathDatInit000)(void);
NIM_EXTERNC N_NOINLINE(void, stdlib_tablesInit000)(void);
NIM_EXTERNC N_NOINLINE(void, stdlib_tablesDatInit000)(void);
NIM_EXTERNC N_NOINLINE(void, stdlib_macrosInit000)(void);
NIM_EXTERNC N_NOINLINE(void, stdlib_macrosDatInit000)(void);
NIM_EXTERNC N_NOINLINE(void, stdlib_posixInit000)(void);
NIM_EXTERNC N_NOINLINE(void, stdlib_posixDatInit000)(void);
NIM_EXTERNC N_NOINLINE(void, stdlib_osInit000)(void);
NIM_EXTERNC N_NOINLINE(void, stdlib_osDatInit000)(void);
NIM_EXTERNC N_NOINLINE(void, stdlib_setsInit000)(void);
NIM_EXTERNC N_NOINLINE(void, stdlib_setsDatInit000)(void);
NIM_EXTERNC N_NOINLINE(void, stdlib_streamsInit000)(void);
NIM_EXTERNC N_NOINLINE(void, stdlib_streamsDatInit000)(void);
NIM_EXTERNC N_NOINLINE(void, stdlib_futureInit000)(void);
NIM_EXTERNC N_NOINLINE(void, stdlib_futureDatInit000)(void);
NIM_EXTERNC N_NOINLINE(void, aoj_dpl_5_l_testInit000)(void);
NIM_EXTERNC N_NOINLINE(void, aoj_dpl_5_l_testDatInit000)(void);
STRING_LITERAL(TMP35, "0", 1);
TNimType NTI159105; /* Mint */
extern TNimType NTI104; /* int */
TNimType NTI159354; /* seq[Mint] */
TNimType NTI159353; /* seq[seq[Mint]] */
extern Gcheap49618 gch_49659;

N_NIMCALL(NI, nextint_159016)(NI base) {
	NI result;
	result = 0;
	scanf("%lld", (&result));
	result -= base;
	return result;
}

N_NIMCALL(NimStringDesc*, HEX24_159192)(Mint159105 a) {
	NimStringDesc* result;
{	result = 0;
	result = nimIntToStr(a.v);
	goto BeforeRet;
	}BeforeRet: ;
	return result;
}
N_NIMCALL(void, TMP36)(void* p, NI op) {
	TY159354* a;
	NI LOC1;
	a = (TY159354*)p;
	LOC1 = 0;
	for (LOC1 = 0; LOC1 < a->len; LOC1++) {
	}
}
N_NIMCALL(void, TMP37)(void* p, NI op) {
	TY159353* a;
	NI LOC1;
	a = (TY159353*)p;
	LOC1 = 0;
	for (LOC1 = 0; LOC1 < a->len; LOC1++) {
	nimGCvisit((void*)a->data[LOC1], op);
	}
}

static N_INLINE(Cell47306*, usrtocell_51241)(void* usr) {
	Cell47306* result;
	result = 0;
	result = ((Cell47306*) ((NI)((NU64)(((NI) (usr))) - (NU64)(((NI)sizeof(Cell47306))))));
	return result;
}

static N_INLINE(void, rtladdzct_52801)(Cell47306* c) {
	addzct_51217(gch_49659.zct, c);
}

static N_INLINE(void, asgnRefNoCycle)(void** dest, void* src) {
	{
		if (!!((src == NIM_NIL))) goto LA3;
{		Cell47306* c = usrtocell_51241(src);
		(*c).refcount += ((NI) 8);
}	}
	LA3: ;
	{
		if (!!(((*dest) == NIM_NIL))) goto LA7;
{		Cell47306* c = usrtocell_51241((*dest));
		{
			(*c).refcount -= ((NI) 8);
			if (!((NU64)((*c).refcount) < (NU64)(((NI) 8)))) goto LA11;
{			rtladdzct_52801(c);
}		}
		LA11: ;
}	}
	LA7: ;
	(*dest) = src;
}

N_NIMCALL(Mint159105, newmint_159205)(NI a_159209) {
	Mint159105 result;
	Mint159105 LOC5;
{	memset((void*)(&result), 0, sizeof(result));
	NI a = a_159209;
	a = ((NI) ((NI)(a % ((NI) 1000000007))));
	{
		if (!(a < ((NI) 0))) goto LA3;
{		a += ((NI) 1000000007);
}	}
	LA3: ;
	memset((void*)(&LOC5), 0, sizeof(LOC5));
	LOC5.v = a;
	result = LOC5;
	goto BeforeRet;
	}BeforeRet: ;
	return result;
}

N_NIMCALL(Mint159105, convert_159422)(Mint159105 self, NI a) {
	Mint159105 result;
	memset((void*)(&result), 0, sizeof(result));
	result = newmint_159205(a);
	return result;
}

N_NIMCALL(Mint159105, newmint_159125)(Mint159105 a) {
	Mint159105 result;
{	memset((void*)(&result), 0, sizeof(result));
	result = a;
	goto BeforeRet;
	}BeforeRet: ;
	return result;
}

N_NIMCALL(void, HEX2BHEX3D_159468)(Mint159105& a, Mint159105 b) {
	Mint159105 LOC1;
	LOC1 = newmint_159125(b);
	a.v += LOC1.v;
	{
		if (!(((NI) 1000000007) <= a.v)) goto LA4;
{		a.v -= ((NI) 1000000007);
}	}
	LA4: ;
}

N_NIMCALL(Mint159105, HEX2B_159458)(Mint159105 a, Mint159105 b) {
	Mint159105 result;
{	memset((void*)(&result), 0, sizeof(result));
	Mint159105 c = a;
	HEX2BHEX3D_159468(c, b);
	result = c;
	goto BeforeRet;
	}BeforeRet: ;
	return result;
}

N_NIMCALL(TY159353*, getpartition_159346)(NI n, NI k) {
	TY159353* result_159355;
	TY159353* result_159357;
	Mint159105 LOC4;
	result_159355 = 0;
	result_159357 = newseq_159379(((NI) ((NI)(n + ((NI) 1)))));
	{
		NI i_159359;
		NI HEX3Atmp_159495;
		i_159359 = 0;
		HEX3Atmp_159495 = 0;
		HEX3Atmp_159495 = ((NI)(n + ((NI) 1)) - 1);
		NI res_159498 = ((NI) 0);
		{
			while (1) {
				if (!(res_159498 <= HEX3Atmp_159495)) goto LA3;
				i_159359 = res_159498;
				asgnRefNoCycle((void**) (&result_159357->data[i_159359]), newseq_159361(((NI) ((NI)(k + ((NI) 1))))));
				res_159498 += ((NI) 1);
			} LA3: ;
		}
	}
	genericSeqAssign((&result_159355), result_159357, (&NTI159353));
	memset((void*)(&LOC4), 0, sizeof(LOC4));
	result_159355->data[((NI) 0)]->data[((NI) 0)] = convert_159422(LOC4, ((NI) 1));
	{
		NI i_159446;
		i_159446 = 0;
		NI res_159513 = ((NI) 0);
		{
			while (1) {
				if (!(res_159513 <= n)) goto LA7;
				i_159446 = res_159513;
				{
					NI j_159456;
					j_159456 = 0;
					NI res_159507 = ((NI) 1);
					{
						while (1) {
							if (!(res_159507 <= k)) goto LA10;
							j_159456 = res_159507;
							{
								if (!(((NI) 0) <= (NI)(i_159446 - j_159456))) goto LA13;
{								result_159355->data[i_159446]->data[j_159456] = HEX2B_159458(result_159355->data[i_159446]->data[(NI)(j_159456 - ((NI) 1))], result_159355->data[(NI)(i_159446 - j_159456)]->data[j_159456]);
}							}
							goto LA11;
							LA13: ;
							{
								result_159355->data[i_159446]->data[j_159456] = result_159355->data[i_159446]->data[(NI)(j_159456 - ((NI) 1))];
							}
							LA11: ;
							res_159507 += ((NI) 1);
						} LA10: ;
					}
				}
				res_159513 += ((NI) 1);
			} LA7: ;
		}
	}
	return result_159355;
}

N_NIMCALL(void, main_159339)(void) {
	NI N = nextint_159016(((NI) 0));
	NI K = nextint_159016(((NI) 0));
	{
		if (!((NI)(N - K) < ((NI) 0))) goto LA3;
{		printf("%s\012", ((NimStringDesc*) &TMP35)? (((NimStringDesc*) &TMP35))->data:"nil");
		fflush(stdout);
}	}
	goto LA1;
	LA3: ;
	{
		TY159353* LOC6;
		NimStringDesc* LOC7;
		LOC6 = 0;
		LOC6 = getpartition_159346((NI)(N - K), K);
		LOC7 = 0;
		LOC7 = HEX24_159192(LOC6->data[(NI)(N - K)]->data[K]);
		printf("%s\012", LOC7? (LOC7)->data:"nil");
		fflush(stdout);
	}
	LA1: ;
}

static N_INLINE(void, initStackBottomWith)(void* locals) {
	setStackBottom(locals);
}
void PreMainInner() {
	systemInit000();
	stdlib_algorithmDatInit000();
	stdlib_sequtilsDatInit000();
	stdlib_parseutilsDatInit000();
	stdlib_strutilsDatInit000();
	stdlib_etcprivDatInit000();
	stdlib_hashesDatInit000();
	stdlib_timesDatInit000();
	stdlib_mathDatInit000();
	stdlib_tablesDatInit000();
	stdlib_macrosDatInit000();
	stdlib_posixDatInit000();
	stdlib_osDatInit000();
	stdlib_setsDatInit000();
	stdlib_streamsDatInit000();
	stdlib_futureDatInit000();
	aoj_dpl_5_l_testDatInit000();
	stdlib_algorithmInit000();
	stdlib_sequtilsInit000();
	stdlib_parseutilsInit000();
	stdlib_strutilsInit000();
	stdlib_etcprivInit000();
	stdlib_hashesInit000();
	stdlib_timesInit000();
	stdlib_mathInit000();
	stdlib_tablesInit000();
	stdlib_macrosInit000();
	stdlib_posixInit000();
	stdlib_osInit000();
	stdlib_setsInit000();
	stdlib_streamsInit000();
	stdlib_futureInit000();
}

void PreMain() {
	void (*volatile inner)();
	systemDatInit000();
	inner = PreMainInner;
	initStackBottomWith((void *)&inner);
	(*inner)();
}

int cmdCount;
char** cmdLine;
char** gEnv;
N_CDECL(void, NimMainInner)(void) {
	aoj_dpl_5_l_testInit000();
}

N_CDECL(void, NimMain)(void) {
	void (*volatile inner)();
	PreMain();
	inner = NimMainInner;
	initStackBottomWith((void *)&inner);
	(*inner)();
}

int main(int argc, char** args, char** env) {
	cmdLine = args;
	cmdCount = argc;
	gEnv = env;
	NimMain();
	return nim_program_result;
}

NIM_EXTERNC N_NOINLINE(void, aoj_dpl_5_l_testInit000)(void) {
	main_159339();
}

NIM_EXTERNC N_NOINLINE(void, aoj_dpl_5_l_testDatInit000)(void) {
static TNimNode TMP3[1];
NTI159105.size = sizeof(Mint159105);
NTI159105.kind = 18;
NTI159105.base = 0;
NTI159105.flags = 3;
TMP3[0].kind = 1;
TMP3[0].offset = offsetof(Mint159105, v);
TMP3[0].typ = (&NTI104);
TMP3[0].name = "v";
NTI159105.node = &TMP3[0];
NTI159354.size = sizeof(TY159354*);
NTI159354.kind = 24;
NTI159354.base = (&NTI159105);
NTI159354.flags = 2;
NTI159354.marker = TMP36;
NTI159353.size = sizeof(TY159353*);
NTI159353.kind = 24;
NTI159353.base = (&NTI159354);
NTI159353.flags = 2;
NTI159353.marker = TMP37;
}

