/* Generated by Nim Compiler v0.13.0 */
/*   (c) 2015 Andreas Rumpf */
/* The generated code is subject to the original license. */
/* Compiled for: Linux, amd64, gcc */
/* Command for C compiler:
   g++ -c  -w -w -fpermissive -O3 -fno-strict-aliasing  -I/home/chaemon/.choosenim/toolchains/nim-0.13.0/lib -o /home/chaemon/git/library-1/nim/math/verify/nimcache/aoj_ntl_1_c_test.o /home/chaemon/git/library-1/nim/math/verify/nimcache/aoj_ntl_1_c_test.cpp */
#define NIM_INTBITS 64

#include "nimbase.h"
#include <stdio.h>
struct TY159156;
struct TGenericSeq;
struct NimStringDesc;
struct  TGenericSeq  {
NI len;
NI reserved;
};
struct  NimStringDesc  : public TGenericSeq {
NIM_CHAR data[SEQ_DECL_SIZE];
};
struct TY159156 : TGenericSeq {
  NI data[SEQ_DECL_SIZE];
};
N_NIMCALL(void, main_159143)(void);
N_NIMCALL(NI, nextint_159016)(NI base);
N_NIMCALL(TY159156*, newseq_159151)(NI len);
N_NIMCALL(NI, lcm_159107)(NI a, NI b);
N_NIMCALL(NI, gcd_159102)(NI a, NI b);
N_NIMCALL(NimStringDesc*, nimIntToStr)(NI x);
static N_INLINE(void, initStackBottomWith)(void* locals);
N_NOINLINE(void, setStackBottom)(void* thestackbottom);
NIM_EXTERNC N_NOINLINE(void, systemInit000)(void);
NIM_EXTERNC N_NOINLINE(void, systemDatInit000)(void);
NIM_EXTERNC N_NOINLINE(void, stdlib_algorithmInit000)(void);
NIM_EXTERNC N_NOINLINE(void, stdlib_algorithmDatInit000)(void);
NIM_EXTERNC N_NOINLINE(void, stdlib_sequtilsInit000)(void);
NIM_EXTERNC N_NOINLINE(void, stdlib_sequtilsDatInit000)(void);
NIM_EXTERNC N_NOINLINE(void, stdlib_parseutilsInit000)(void);
NIM_EXTERNC N_NOINLINE(void, stdlib_parseutilsDatInit000)(void);
NIM_EXTERNC N_NOINLINE(void, stdlib_strutilsInit000)(void);
NIM_EXTERNC N_NOINLINE(void, stdlib_strutilsDatInit000)(void);
NIM_EXTERNC N_NOINLINE(void, stdlib_etcprivInit000)(void);
NIM_EXTERNC N_NOINLINE(void, stdlib_etcprivDatInit000)(void);
NIM_EXTERNC N_NOINLINE(void, stdlib_hashesInit000)(void);
NIM_EXTERNC N_NOINLINE(void, stdlib_hashesDatInit000)(void);
NIM_EXTERNC N_NOINLINE(void, stdlib_timesInit000)(void);
NIM_EXTERNC N_NOINLINE(void, stdlib_timesDatInit000)(void);
NIM_EXTERNC N_NOINLINE(void, stdlib_mathInit000)(void);
NIM_EXTERNC N_NOINLINE(void, stdlib_mathDatInit000)(void);
NIM_EXTERNC N_NOINLINE(void, stdlib_tablesInit000)(void);
NIM_EXTERNC N_NOINLINE(void, stdlib_tablesDatInit000)(void);
NIM_EXTERNC N_NOINLINE(void, stdlib_macrosInit000)(void);
NIM_EXTERNC N_NOINLINE(void, stdlib_macrosDatInit000)(void);
NIM_EXTERNC N_NOINLINE(void, stdlib_posixInit000)(void);
NIM_EXTERNC N_NOINLINE(void, stdlib_posixDatInit000)(void);
NIM_EXTERNC N_NOINLINE(void, stdlib_osInit000)(void);
NIM_EXTERNC N_NOINLINE(void, stdlib_osDatInit000)(void);
NIM_EXTERNC N_NOINLINE(void, stdlib_setsInit000)(void);
NIM_EXTERNC N_NOINLINE(void, stdlib_setsDatInit000)(void);
NIM_EXTERNC N_NOINLINE(void, stdlib_streamsInit000)(void);
NIM_EXTERNC N_NOINLINE(void, stdlib_streamsDatInit000)(void);
NIM_EXTERNC N_NOINLINE(void, stdlib_futureInit000)(void);
NIM_EXTERNC N_NOINLINE(void, stdlib_futureDatInit000)(void);
NIM_EXTERNC N_NOINLINE(void, aoj_ntl_1_c_testInit000)(void);
NIM_EXTERNC N_NOINLINE(void, aoj_ntl_1_c_testDatInit000)(void);

N_NIMCALL(NI, nextint_159016)(NI base) {
	NI result;
	result = 0;
	scanf("%lld", (&result));
	result -= base;
	return result;
}

N_NIMCALL(NI, gcd_159102)(NI a, NI b) {
	NI result;
{	result = 0;
	{
		if (!(b == ((NI) 0))) goto LA3;
{		result = a;
		goto BeforeRet;
}	}
	goto LA1;
	LA3: ;
	{
		result = gcd_159102(b, (NI)(a % b));
		goto BeforeRet;
	}
	LA1: ;
	}BeforeRet: ;
	return result;
}

N_NIMCALL(NI, lcm_159107)(NI a, NI b) {
	NI result;
	NI LOC1;
{	result = 0;
	LOC1 = 0;
	LOC1 = gcd_159102(a, b);
	result = (NI)((NI)(a / LOC1) * b);
	goto BeforeRet;
	}BeforeRet: ;
	return result;
}

N_NIMCALL(void, main_159143)(void) {
	TY159156* a;
	TY159156* result_159147;
	NimStringDesc* LOC7;
	NI n = nextint_159016(((NI) 0));
	result_159147 = newseq_159151(((NI) (n)));
	{
		NI i_159149;
		NI HEX3Atmp_159406;
		i_159149 = 0;
		HEX3Atmp_159406 = 0;
		HEX3Atmp_159406 = (n - 1);
		NI res_159409 = ((NI) 0);
		{
			while (1) {
				if (!(res_159409 <= HEX3Atmp_159406)) goto LA3;
				i_159149 = res_159409;
				result_159147->data[i_159149] = nextint_159016(((NI) 0));
				res_159409 += ((NI) 1);
			} LA3: ;
		}
	}
	a = result_159147;
	NI l = ((NI) 1);
	{
		NI t_159402;
		t_159402 = 0;
		NI i_159416 = ((NI) 0);
		NI L_159418 = (a ? a->len : 0);
		{
			while (1) {
				if (!(i_159416 < L_159418)) goto LA6;
				t_159402 = a->data[i_159416];
				l = lcm_159107(l, t_159402);
				i_159416 += ((NI) 1);
			} LA6: ;
		}
	}
	LOC7 = 0;
	LOC7 = nimIntToStr(l);
	printf("%s\012", LOC7? (LOC7)->data:"nil");
	fflush(stdout);
}

static N_INLINE(void, initStackBottomWith)(void* locals) {
	setStackBottom(locals);
}
void PreMainInner() {
	systemInit000();
	stdlib_algorithmDatInit000();
	stdlib_sequtilsDatInit000();
	stdlib_parseutilsDatInit000();
	stdlib_strutilsDatInit000();
	stdlib_etcprivDatInit000();
	stdlib_hashesDatInit000();
	stdlib_timesDatInit000();
	stdlib_mathDatInit000();
	stdlib_tablesDatInit000();
	stdlib_macrosDatInit000();
	stdlib_posixDatInit000();
	stdlib_osDatInit000();
	stdlib_setsDatInit000();
	stdlib_streamsDatInit000();
	stdlib_futureDatInit000();
	aoj_ntl_1_c_testDatInit000();
	stdlib_algorithmInit000();
	stdlib_sequtilsInit000();
	stdlib_parseutilsInit000();
	stdlib_strutilsInit000();
	stdlib_etcprivInit000();
	stdlib_hashesInit000();
	stdlib_timesInit000();
	stdlib_mathInit000();
	stdlib_tablesInit000();
	stdlib_macrosInit000();
	stdlib_posixInit000();
	stdlib_osInit000();
	stdlib_setsInit000();
	stdlib_streamsInit000();
	stdlib_futureInit000();
}

void PreMain() {
	void (*volatile inner)();
	systemDatInit000();
	inner = PreMainInner;
	initStackBottomWith((void *)&inner);
	(*inner)();
}

int cmdCount;
char** cmdLine;
char** gEnv;
N_CDECL(void, NimMainInner)(void) {
	aoj_ntl_1_c_testInit000();
}

N_CDECL(void, NimMain)(void) {
	void (*volatile inner)();
	PreMain();
	inner = NimMainInner;
	initStackBottomWith((void *)&inner);
	(*inner)();
}

int main(int argc, char** args, char** env) {
	cmdLine = args;
	cmdCount = argc;
	gEnv = env;
	NimMain();
	return nim_program_result;
}

NIM_EXTERNC N_NOINLINE(void, aoj_ntl_1_c_testInit000)(void) {
	main_159143();
}

NIM_EXTERNC N_NOINLINE(void, aoj_ntl_1_c_testDatInit000)(void) {
}

